Nem akartam regényt ide, szóval leírást nem sokat adok, hívj vagy írj és szívesen segítek, vagy chatgpt.

Amire szükséged lesz:
- XAMPP 8.2.12. https://www.apachefriends.org/hu/index.html
- Composer (mint a Maven, csomagkezelo): https://getcomposer.org/download/

1. Telepítsd a xamppot, php -v paranccsal nézd meg utána hogy jó-e. Ez php-t és mysql-t is tartalmaz.
2. Indítsd el a xampp/xampp-controlt, apache+mysql-re start.
3. Böngésző: localhost/phpmyadmin linken hozz létre egy "babytracker" nevű db-t, utf8mb4_unicode_ci !!!
4. CMD: lépj a xampp/htdocs mappába, és ide git clone <git>, fontos hogy ide. Aztán CD projekt mappa és többi lépés.
5. CMD: copy .env.example .env --> majd az .env fájlba vedd ki a DB rész mögül a #-t, és DB_DATABASE=babytracker
        // 5! lépésbe csak a cmd kell már, az env.example-t beállítottam előre.
6. CMD: composer install
7. CMD: php artisan key:generate
8. CMD: php artisan migrate: létrehozza a db táblákat
9. CMD: php artisan db:seed: feltölti adattal x táblát ha van seed hozzá
10.CMD: php artisan storage:link: erre keress rá, ez bonyolultabb kicsit,de most még publicba simán tehetsz landing pages icont képet.
11.CMD: Futtatás: php artisan serve, majd localhost:8000, vagy ami portra kienged. Ha meguntad CTRL C, és leáll.

Kódolás előtt:
- git checkout -b <branchod neve, nekem gombi>: létrehozol egy saját brancht.
- git branch: láthatod a branchokat, csillaggal melyiken állsz.
- Mehet a kód, arra figyelj hogy mindig a saját branchodon legyél
- Push: git push origin <branchneve> -->ez a tuti

- Ha már ezen túlvagy, mindig kódolás után pusholj,
minden kódolás előtt fetchelj hogy a legfrissebbet lehúzd, majd jöhet a kódolás.

DB: migráció/seed futtatása után láthatod a localhost/phpmyadmin-on

FONTOS FELÉPÍTÉS AMIT NÉZZ ÁT:
1. DB: database/migrations --> ezek hozzák létre a db-t "php artisan migrate" parancsra. Ez egy pontos leírás a db-ről.
2. Model: APP/MODELS --> Ez kezeli a DB-controller kapcsolatot. Leírja a kapcsolatokat a táblák között, melyik oszlopokat tölthetjük fel weben keresztül.
3. Controller: APP/HTTP/CONTROLLERS/ --> itt van ami a backend logika, user és admin két részre szedve.
4. Views: RESOURCES/VIEWS/ --> itt vannak a "html"-ek amiket látunk, xy.blade.php formátumban. Láthatod a layout elrendezést. USER/ADMIN külön.
5. Route: ROUTES/WEB.PHP --> itt láthatod az elérhető routeokat, melyik van auth alatt, melyik nincs.

AMI MEGVAN: komplett admin auth, session, controller hozzá: Hogy tesztelhessem csináltam egy üres blade fájlt. Azoknak kell frontend.
Ezeknek ad át a controller adatot, szóval itt még ismerkedésként blade-el frontenddel kezdhetsz. A routeban látható routeokhoz van view blade fájl is,
ennyi segítség van. HA ezek megvannak, akár kipróbálhatsz új route-controller változtatást, pl. user dashboardhoz gyerek rögzítése, ez kis backend.
Ha nem izgat, akkor megcsinálom én a backend rögzítés részét is, te meg a formokat a frontenden akkor.

# GLHF!